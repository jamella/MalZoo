{"name":"Malzoo","tagline":"Mass static malware analysis tool","body":"# What is MalZoo?\r\nMalZoo is a mass static malware analysis tool that collects information from malware and stores this in a Mongo database. It moves the malware samples to a repository directory based on the first 4 characters of the MD5 hash for reference.\r\nIt was build for an internship project to analyze sample sets of 50 G.B.+ (e.g. from [VirusShare](http://virusshare.com))\r\nso correlations between malware samples can be found. This can aid as input for Threat Intelligence or help incident response to classify a sample.\r\n\r\nA few use cases are:\r\n* Use the collected information to get insights in malware (e.g. see most used packers),\r\n* Analyze a specific directory to collect information from samples added,\r\n* Gather intell of large open source malware repositories, \r\n* Visualize the results by exporting them to a data analysis tool (e.g. [Splunk](https://www.splunk.com))\r\n\r\n# Installation\r\nSee the Wiki [Installation](https://github.com/nheijmans/MalZoo/wiki/Installation-and-configuration) page\r\n\r\n## Information collected\r\nThe following data is being collected from PE files:\r\n* Filename of the sample\r\n* Filetype\r\n* Filesize\r\n* MD5 hash\r\n* SHA-1 hash\r\n* PE hash\r\n* Fuzzy hash\r\n* Imphash\r\n* YARA rules that match\r\n* PE compile time\r\n* Imported DLL's\r\n* PE packer information (if available)\r\n* PE language\r\n* Original filename (if available)\r\n* Strings\r\n\r\n# Idea's to make MalZoo better:  \r\n* Support other file formats (e.g. PDF, APK, JAR, Office)\r\n* ~~Directory monitor for live monitoring~~\r\n* Add visualisation scripts (with the help of  matplotlib, numPy and Pandas)\r\n* Add ClamAV module\r\n* Add VirusTotal module\r\n\r\n# License\r\nThis project is released under the GPL 2.0 License. See the LICENSE for details.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}